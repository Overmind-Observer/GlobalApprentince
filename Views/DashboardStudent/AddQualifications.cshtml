@model Global_Intern.Models.Qualification;

@{
	ViewBag.Title = "Qualifications";
	Layout = "~/Views/Shared/_LayoutDashBoardStudent.cshtml";
}

<main>
	<div class="content">
		<div class="container-fluid" style="margin-top:56px;">
			<h2>Add Qualification</h2>


			@using (Html.BeginForm("ProcessCreate", "DashboardStudent"))
			{
				@Html.AntiForgeryToken()

				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group">
					@Html.LabelFor(model => model.QualificationSchool, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.QualificationSchool, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.QualificationSchool, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.QualificationTitle, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.QualificationTitle, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.QualificationTitle, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.QualificationType, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.QualificationType, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.QualificationType, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.FieldofStudy, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.FieldofStudy, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.FieldofStudy, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.QualificationStillStudying, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.QualificationStillStudying, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.QualificationStillStudying, "", new { @class = "text-danger" })
					</div>
				</div>




				@*@Html.HiddenFor(u=>u.User.Userid)*@


				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Save" class="btn btn-default" />
					</div>
				</div>
			}

			<div>
				@Html.ActionLink("Back to List", "Index")
			</div>
		</div>

		@*@section Scripts {
				@Scripts.Render("~/bundles/jqueryval")
			}*@

	</div>
</main>